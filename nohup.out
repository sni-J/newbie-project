2019-05-16T03:17:30.192+0000 I CONTROL  [main] Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'
2019-05-16T03:17:30.195+0000 I CONTROL  [initandlisten] MongoDB starting : pid=371 port=27017 dbpath=/data/db 64-bit host=96eea4004f5b
2019-05-16T03:17:30.195+0000 I CONTROL  [initandlisten] db version v4.0.9
2019-05-16T03:17:30.195+0000 I CONTROL  [initandlisten] git version: fc525e2d9b0e4bceff5c2201457e564362909765
2019-05-16T03:17:30.195+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016
2019-05-16T03:17:30.195+0000 I CONTROL  [initandlisten] allocator: tcmalloc
2019-05-16T03:17:30.195+0000 I CONTROL  [initandlisten] modules: none
2019-05-16T03:17:30.196+0000 I CONTROL  [initandlisten] build environment:
2019-05-16T03:17:30.196+0000 I CONTROL  [initandlisten]     distmod: ubuntu1604
2019-05-16T03:17:30.196+0000 I CONTROL  [initandlisten]     distarch: x86_64
2019-05-16T03:17:30.196+0000 I CONTROL  [initandlisten]     target_arch: x86_64
2019-05-16T03:17:30.196+0000 I CONTROL  [initandlisten] options: {}
2019-05-16T03:17:30.196+0000 I STORAGE  [initandlisten] Detected data files in /data/db created by the 'wiredTiger' storage engine, so setting the active storage engine to 'wiredTiger'.
2019-05-16T03:17:30.196+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=7506M,session_max=20000,eviction=(threads_min=4,threads_max=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),statistics_log=(wait=0),verbose=(recovery_progress),
2019-05-16T03:17:31.119+0000 I STORAGE  [initandlisten] WiredTiger message [1557976651:119833][371:0x7f71e5a81a80], txn-recover: Main recovery loop: starting at 1/20992 to 2/256
2019-05-16T03:17:31.217+0000 I STORAGE  [initandlisten] WiredTiger message [1557976651:217804][371:0x7f71e5a81a80], txn-recover: Recovering log 1 through 2
2019-05-16T03:17:31.332+0000 I STORAGE  [initandlisten] WiredTiger message [1557976651:332098][371:0x7f71e5a81a80], txn-recover: Recovering log 2 through 2
2019-05-16T03:17:31.385+0000 I STORAGE  [initandlisten] WiredTiger message [1557976651:385445][371:0x7f71e5a81a80], txn-recover: Set global recovery timestamp: 0
2019-05-16T03:17:31.693+0000 I RECOVERY [initandlisten] WiredTiger recoveryTimestamp. Ts: Timestamp(0, 0)
2019-05-16T03:17:31.760+0000 I CONTROL  [initandlisten] 
2019-05-16T03:17:31.760+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2019-05-16T03:17:31.760+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2019-05-16T03:17:31.760+0000 I CONTROL  [initandlisten] 
2019-05-16T03:17:31.760+0000 I CONTROL  [initandlisten] ** WARNING: This server is bound to localhost.
2019-05-16T03:17:31.760+0000 I CONTROL  [initandlisten] **          Remote systems will be unable to connect to this server. 
2019-05-16T03:17:31.760+0000 I CONTROL  [initandlisten] **          Start the server with --bind_ip <address> to specify which IP 
2019-05-16T03:17:31.760+0000 I CONTROL  [initandlisten] **          addresses it should serve responses from, or with --bind_ip_all to
2019-05-16T03:17:31.760+0000 I CONTROL  [initandlisten] **          bind to all interfaces. If this behavior is desired, start the
2019-05-16T03:17:31.760+0000 I CONTROL  [initandlisten] **          server with --bind_ip 127.0.0.1 to disable this warning.
2019-05-16T03:17:31.760+0000 I CONTROL  [initandlisten] 
2019-05-16T03:17:31.775+0000 I FTDC     [initandlisten] Initializing full-time diagnostic data capture with directory '/data/db/diagnostic.data'
2019-05-16T03:17:31.776+0000 I NETWORK  [initandlisten] waiting for connections on port 27017
2019-05-16T03:17:33.392+0000 I NETWORK  [listener] connection accepted from 127.0.0.1:56870 #1 (1 connection now open)
2019-05-16T03:17:33.392+0000 I NETWORK  [conn1] received client metadata from 127.0.0.1:56870 conn1: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.9" }, os: { type: "Linux", name: "Ubuntu", architecture: "x86_64", version: "16.04" } }
2019-05-16T03:19:16.471+0000 I STORAGE  [conn1] createCollection: newbie_project.Histories with generated UUID: 0a7ff55e-0094-4e4f-9a44-7a53043601d2
2019-05-16T03:19:16.656+0000 I COMMAND  [conn1] command newbie_project.Histories appName: "MongoDB Shell" command: create { create: "Histories", lsid: { id: UUID("4de5f698-2837-4112-b999-5849190cda8e") }, $db: "newbie_project" } numYields:0 reslen:38 locks:{ Global: { acquireCount: { r: 1, w: 1 } }, Database: { acquireCount: { W: 1 } } } storage:{} protocol:op_msg 185ms
2019-05-16T03:19:27.517+0000 I STORAGE  [conn1] createCollection: newbie_project.Users with generated UUID: 0a9b6ad3-0f87-4005-b8d6-fd52557b7399
2019-05-16T03:19:27.731+0000 I COMMAND  [conn1] command newbie_project.Users appName: "MongoDB Shell" command: create { create: "Users", lsid: { id: UUID("4de5f698-2837-4112-b999-5849190cda8e") }, $db: "newbie_project" } numYields:0 reslen:38 locks:{ Global: { acquireCount: { r: 1, w: 1 } }, Database: { acquireCount: { W: 1 } } } storage:{} protocol:op_msg 214ms
2019-05-16T03:24:20.615+0000 I COMMAND  [conn1] renameCollectionForCommand: rename newbie_project.Histories to newbie_project.histories.
2019-05-16T03:24:20.616+0000 I STORAGE  [conn1] renameCollection: renaming collection 0a7ff55e-0094-4e4f-9a44-7a53043601d2 from newbie_project.Histories to newbie_project.histories
2019-05-16T03:24:30.435+0000 I COMMAND  [conn1] renameCollectionForCommand: rename newbie_project.Users to newbie_project.users.
2019-05-16T03:24:30.436+0000 I STORAGE  [conn1] renameCollection: renaming collection 0a9b6ad3-0f87-4005-b8d6-fd52557b7399 from newbie_project.Users to newbie_project.users
2019-05-16T03:25:50.940+0000 I NETWORK  [conn1] end connection 127.0.0.1:56870 (0 connections now open)
2019-05-16T03:25:58.265+0000 I NETWORK  [listener] connection accepted from 127.0.0.1:57018 #2 (1 connection now open)
2019-05-16T03:25:58.269+0000 I NETWORK  [conn2] received client metadata from 127.0.0.1:57018 conn2: { driver: { name: "nodejs", version: "3.2.4" }, os: { type: "Linux", name: "linux", architecture: "x64", version: "4.4.0-139-generic" }, platform: "Node.js v10.15.3, LE, mongodb-core: 3.2.4" }
2019-05-16T06:29:18.312+0000 I NETWORK  [listener] connection accepted from 127.0.0.1:59446 #3 (2 connections now open)
2019-05-16T06:29:18.313+0000 I NETWORK  [conn3] received client metadata from 127.0.0.1:59446 conn3: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.9" }, os: { type: "Linux", name: "Ubuntu", architecture: "x86_64", version: "16.04" } }
2019-05-16T06:34:02.916+0000 I NETWORK  [conn3] end connection 127.0.0.1:59446 (1 connection now open)
2019-05-16T06:34:30.201+0000 I NETWORK  [listener] connection accepted from 127.0.0.1:59486 #4 (2 connections now open)
2019-05-16T06:34:30.201+0000 I NETWORK  [conn4] received client metadata from 127.0.0.1:59486 conn4: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.9" }, os: { type: "Linux", name: "Ubuntu", architecture: "x86_64", version: "16.04" } }
2019-05-16T06:36:03.823+0000 I STORAGE  [conn4] createCollection: test.histories with generated UUID: ff02e1b9-4725-4d71-b80e-0664179eef22
2019-05-16T06:36:04.013+0000 I COMMAND  [conn4] command test.histories appName: "MongoDB Shell" command: insert { insert: "histories", ordered: true, lsid: { id: UUID("6d98bd45-5e3e-446e-9df3-ae2b69a78df7") }, $db: "test" } ninserted:1 keysInserted:1 numYields:0 reslen:45 locks:{ Global: { acquireCount: { r: 3, w: 3 } }, Database: { acquireCount: { w: 2, W: 1 } }, Collection: { acquireCount: { w: 2 } } } storage:{} protocol:op_msg 189ms
2019-05-16T06:36:15.493+0000 I NETWORK  [conn4] end connection 127.0.0.1:59486 (1 connection now open)
2019-05-16T07:04:03.361+0000 I NETWORK  [listener] connection accepted from 127.0.0.1:60004 #5 (2 connections now open)
2019-05-16T07:04:03.362+0000 I NETWORK  [conn5] received client metadata from 127.0.0.1:60004 conn5: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.9" }, os: { type: "Linux", name: "Ubuntu", architecture: "x86_64", version: "16.04" } }
2019-05-16T07:05:19.022+0000 I NETWORK  [conn5] end connection 127.0.0.1:60004 (1 connection now open)
2019-05-16T07:05:21.094+0000 I NETWORK  [listener] connection accepted from 127.0.0.1:60022 #6 (2 connections now open)
2019-05-16T07:05:21.094+0000 I NETWORK  [conn6] received client metadata from 127.0.0.1:60022 conn6: { application: { name: "MongoDB Shell" }, driver: { name: "MongoDB Internal Client", version: "4.0.9" }, os: { type: "Linux", name: "Ubuntu", architecture: "x86_64", version: "16.04" } }
2019-05-16T07:06:36.442+0000 I COMMAND  [conn6] dropDatabase test - starting
2019-05-16T07:06:36.442+0000 I COMMAND  [conn6] dropDatabase test - dropping 0 collections
2019-05-16T07:06:36.507+0000 I COMMAND  [conn6] dropDatabase test - finished
2019-05-16T07:08:21.308+0000 I NETWORK  [conn6] end connection 127.0.0.1:60022 (1 connection now open)
2019-05-16T11:30:18.674+0000 I NETWORK  [conn2] end connection 127.0.0.1:57018 (0 connections now open)
2019-05-16T11:30:24.580+0000 I NETWORK  [listener] connection accepted from 127.0.0.1:35466 #7 (1 connection now open)
2019-05-16T11:30:24.584+0000 I NETWORK  [conn7] received client metadata from 127.0.0.1:35466 conn7: { driver: { name: "nodejs", version: "3.2.4" }, os: { type: "Linux", name: "linux", architecture: "x64", version: "4.4.0-139-generic" }, platform: "Node.js v10.15.3, LE, mongodb-core: 3.2.4" }
